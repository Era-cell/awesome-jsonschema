- title: Using JSON Schema
  url: https://books.apple.com/us/book/using-json-schema/id903248630
  year: 2014
  type: book
  summary: Learn and Apply JSON Schema by Example, with Javascript (Node.js) and Python Programs
- title: JSON at Work
  url: https://www.oreilly.com/library/view/json-at-work/9781491982389/
  year: 2017
  type: book
  summary: A comprehensive overview of the JSON ecosystem, including JSON Schema
- title: API by Design
  url: https://smizell.gumroad.com/l/apibydesign
  year: 2021
  type: book
  summary: Introduces an approach to measure API complexity by analyzing entropy in JSON Schema definitions

- title: Configuring Umbraco on .NET Core - JSON Schema
  url: https://www.youtube.com/watch?v=rpUg-oySw8g
  year: 2021
  type: video
  summary: Configuring Umbraco on .NET Core with JSON Schema-powered autocompletions for appsettings.json using SchemaStore
- title: API Storytelling with Ben Hutton
  url: https://www.youtube.com/watch?v=4xbA82lo_lc
  year: 2021
  type: video
  summary: This episode we sit down with Ben Hutton, the lead behind the JSON Schema community to talk about vocabularies and other ways we validate and annotate how we tell stories we tell in the API space
- title: What is JSON Schema
  url: https://www.youtube.com/watch?v=kK-_gL7Vsc0
  year: 2020
  type: video
  summary: A basic introduction to JSON Schema showing how to auto-generate JSON Schema document from an existing JSON document
- title: "What is a JSON Schema? Generate, Modify, and Understand a JSON Schema: Example"
  url: https://www.youtube.com/watch?v=hGXxXyJmaUo
  year: 2019
  type: video
  summary: An in-depth introduction to JSON Schema including auto-generating JSON Schema documents using QuickType.io
- title: "JSON Schema Validation: How to Validate JSON Schema with Postman?"
  url: https://www.youtube.com/watch?v=X072eKtOIio
  year: 2019
  type: video
  summary: An introduction to JSON Schema and how to use it in Postman
- title: JSON Schema Validation in Postman
  url: https://www.youtube.com/watch?v=8BfshV5n6ac
  year: 2021
  type: video
  summary: An tutorial of performing JSON Schema validation in Postman in API tests
- title: Processing and Interchanging JSON Data
  url: https://www.linkedin.com/learning/processing-and-interchanging-json-data
  year: 2017
  type: course
  summary: An in-depth guide to working with JSON and the JSON ecosystem including using JSON Schema for validation purposes
- title: JSON Schema - Crash Course for Beginners
  url: https://www.udemy.com/course/json-schema-crash-course-for-beginners/
  year: 2017
  type: course
  summary: Learn JSON & JSON Schema in a Quick 30-40 minutes & use it for the rest of your life for complex projects
- title: JSON Schema Tutorial
  url: https://www.w3resource.com/JSON/JSON-Schema.php
  year: 2020
  type: tutorial
  summary: A tutorial of JSON Schema that discusses validation, documentation and hyperlinking
- title: JSON Schema bundling finally formalised
  url: https://json-schema.org/blog/posts/bundling-json-schema-compound-documents
  year: 2021
  type: article
  summary: A close look at bundling and de-referencing JSON Schema documents
- title: Modeling a file system with JSON Schema
  url: https://json-schema.org/learn/file-system.html
  year: 2021
  type: article
  summary: This example shows a possible JSON Schema representation of file system mount points as represented in an /etc/fstab file

- title: JSON Schema Validator, Generator & Editor Guide
  url: https://stoplight.io/json-guide/
  year: 2018
  type: article
  summary: How the JSON and JSON Schema standards are defined and how to put them to use in your code and in your APIs
- title: "REST API Tutorial: JSON Schema"
  url: https://restfulapi.net/json-schema/
  year: 2019
  type: tutorial
  summary: An short introduction to JSON Schema validation
- title: "TutorialsPoint: JSON Schema"
  url: https://www.tutorialspoint.com/json/json_schema.htm
  year: 2013
  type: tutorial
  summary: A short introduction to JSON Schema Draft4 validation
- title: "An introduction to JSON Schema"
  url: https://medium.com/swlh/an-introduction-to-json-schema-8eaea643fcda
  year: 2020
  type: tutorial
  summary: An introduction to JSON Schema covering its history, common keywords and how to use the AJV validator
- title: "Introduction to JSON Schema in Java"
  url: https://www.baeldung.com/introduction-to-json-schema-in-java
  year: 2021
  type: tutorial
  summary: A short introduction to validating JSON documents with JSON Schema in Java
- title: "Using the JSON Schema standard for scientific applications?"
  url: https://cerfacs.fr/coop/json-schema-for-sci-apps
  year: 2020
  type: article
  summary: A discussion on how to use JSON Schema to validate input, add precise documentation, auto-fill missing parts, and create graphical user interfaces in the context of scientific applications
- title: "Building a No-Code JSON Schema Form Builder with ReactJS"
  url: https://www.ginkgobioworks.com/2020/10/08/building-a-no-code-json-schema-form-builder/
  year: 2020
  type: article
  summary: An update on the additional features implemented in the react-json-schema-form-builder open-source JSON Schema form builder project
- title: "Saved by the Schema: Using JSON Schema to Document, Test, and Debug APIs"
  url: https://blog.heroku.com/json-schema-document-debug-apis
  year: 2019
  type: article
  summary: Learn how Heroku uses JSON Schema to test and document their Platform API, and how it helped them uncover an unexpected bug, rooted in the way the Oj gem parses Big Decimals.
- title: "Validating and documenting JSON with JSON Schema"
  url: https://www.mscharhag.com/api-design/json-schema
  year: 2020
  type: tutorial
  summary: An introduction to JSON Schema by example by showing an annotated JSON Schema that validates an example document
- title: How to Integrate "React JSON Schema Form" into a Redux and Typescript Project
  url: https://www.xtivia.com/blog/how-to-integrate-react-json-schema-form-into-a-redux-and-typescript-project/
  year: 2020
  type: article
  summary: Adding a form using "React JSON Schema Form" and integrating it with Redux and Typescript
- title: JSON Schema Validation & Expressive Query Syntax in MongoDB 3.6
  url: https://www.sitepoint.com/json-schema-validation-expressive-query-syntax-in-mongodb-3-6/
  year: 2018
  type: article
  summary: An in-depth discussion about using JSON Schema to define collection validation on MongoDB
- title: Azure Pipelines autocomplete in PyCharm, IntelliJ, WebStorm, CLion, and Rider
  url: https://tonybaloney.github.io/posts/azure-pipelines-autocomplete-in-pycharm.html
  year: 2020
  type: article
  summary: Setting up PyCharm, IntelliJ, WebStorm, CLion and Rider to have auto-complete, syntax highlighting and validation support of Azure Pipelines workflows
- title: PHP With MySQL
  url: https://elephantdolphin.blogspot.com/2019/07/json-schema-validation-with-mysql-8017.html
  year: 2019
  type: article
  summary: A practical tutorial on expressing JSON Schema table constraints on MySQL

- title: Definitions for filtering properties in JSON schema
  url: https://gist.github.com/LucianBuzzo/5ff9106ce3ae12fb58e4def572b9344d
  year: 2018
  type: article
  summary: An introduction to the problem of using JSON Schema for data filtering and querying purposes

- title: Getting started with JSON Hyper-Schema
  url: https://apisyouwonthate.com/blog/getting-started-with-json-hyper-schema
  year: 2017
  type: tutorial
  summary: An introduction to the Hyper-Schema JSON Schema vocabulary

- title: "JSON Schema: Getting Started Step-By-Step"
  url: https://json-schema.org/learn/getting-started-step-by-step.html
  year: 2021
  type: tutorial
  summary: A comprehensive introduction to JSON Schema

- title: Understanding JSON Schema
  url: https://json-schema.org/understanding-json-schema/
  year: 2021
  type: tutorial
  summary: An in-depth guide to JSON Schema

- title: OpenAPI
  url: https://swagger.io/specification/
  year: 2021
  type: spec
  summary: The OpenAPI specification embeds and extends JSON Schema for defining API request and responses
- title: RAML
  url: https://raml.org
  year: 2021
  type: spec
  summary: The RAML specification supports modeling API data using JSON Schema

- title: AsyncAPI
  url: https://www.asyncapi.com/docs/specifications/v2.1.0
  year: 2021
  type: spec
  summary: AsyncAPI is an open source initiative that seeks to improve the current state of Event-Driven Architectures (EDA). The AsyncAPI supports data modeling using JSON Schema

- title: JSON Schema in RDF
  url: https://www.w3.org/2019/wot/json-schema
  year: 2021
  type: spec
  summary: This document introduces an RDF vocabulary for JSON schema definitions. This vocabulary provides a stable namespace IRI for JSON schema keywords, as well as simple axioms, defined against schema.org's meta-model. Various examples on how to use the vocabulary are also introduced, e.g. to annotate schemas with JSON-LD metadata or to embed schema annotations inside RDF graphs

- title: JSON Schema Core 2020-12
  url: https://json-schema.org/draft/2020-12/json-schema-core.html
  year: 2020
  type: spec
  summary: JSON Schema defines the media type "application/schema+json", a JSON-based format for describing the structure of JSON data. JSON Schema asserts what a JSON document must look like, ways to extract information from it, and how to interact with it. The "application/schema-instance+json" media type provides additional feature-rich integration with "application/schema+json" beyond what can be offered for "application/json" documents

- title: JSON Schema Validation 2020-12
  url: https://json-schema.org/draft/2020-12/json-schema-validation.html
  year: 2020
  type: spec
  summary: JSON Schema (application/schema+json) has several purposes, one of which is JSON instance validation. This document specifies a vocabulary for JSON Schema to describe the meaning of JSON documents, provide hints for user interfaces working with JSON data, and to make assertions about what a valid document must look like

- title: Relative JSON Pointers
  url: https://json-schema.org/draft/2020-12/relative-json-pointer.html
  year: 2020
  type: spec
  summary: JSON Pointer is a syntax for specifying locations in a JSON document, starting from the document root. This document defines an extension to the JSON Pointer syntax, allowing relative locations from within the document

- title: JSON Hyper-Schema
  url: https://datatracker.ietf.org/doc/html/draft-handrews-json-schema-hyperschema-02
  year: 2019
  type: spec
  summary: JSON Schema is a JSON-based format for describing JSON data using various vocabularies.  This document specifies a vocabulary for annotating JSON documents with hyperlinks.  These hyperlinks include attributes describing how to manipulate and interact with remote resources through hypermedia environments such as HTTP, as well as determining whether the link is usable based on the instance value

- title: JSON:API
  url: https://github.com/json-api/json-api/blob/a0296352b6eb57a4ea3eb08a1332e311f78adafa/schema
  type: adoption
  summary: The JSON:API 1.0 and later specifications for building APIs in JSON use JSON Schema to define JSON:API responses
- title: MongoDB
  url: https://docs.mongodb.com/manual/reference/operator/query/jsonSchema/
  type: adoption
  summary: MongoDB 3.6 and later support JSON Schema for querying data and defining collection constraints
- title: Assertible
  url: https://assertible.com/json-schema-validation
  type: adoption
  summary: Assertible provides a free-to-use API to validate a JSON document against a JSON Schema and a service to test and monitor web services using JSON Schema
- title: MySQL
  url: https://dev.mysql.com/doc/refman/8.0/en/json-validation-functions.html
  type: adoption
  summary: MySQL 8.0.17 and later support table constraints to validate a JSON document against a JSON Schema
- title: Amazon EventBridge Schema Registry
  url: https://aws.amazon.com/about-aws/whats-new/2020/09/amazon-eventbridge-schema-registry-announces-support-for-json-schema/
  type: adoption
  summary: Amazon EventBridge Schema Registry has support for JSON Schema, allowing customers to validate, annotate, and manipulate JSON documents conforming to JSON Schema Draft 4 specification

- title: KrakenD
  url: https://www.krakend.io/docs/endpoints/json-schema/
  type: adoption
  summary: KrakenD endpoints receiving a JSON object in its body can apply automatic validations using the JSON Schema vocabulary before the content passes to the backends
- title: IBM App Connect
  url: https://www.ibm.com/docs/en/app-connect/11.0.0?topic=schema-json-requirements-message-maps
  type: adoption
  summary: The Graphical Data Mapping editor can be used to create and transform JSON messages with the data model defined from a JSON schema
- title: Confluent Schema Registry
  url: https://docs.confluent.io/platform/current/schema-registry/serdes-develop/serdes-json.html
  type: adoption
  summary: JSON Schema can be configured with the Apache Kafka Java client and console tools to fail if the payload is not valid for the given schema
- title: RESTHeart
  url: https://restheart.org/docs/json-schema-validation/
  type: adoption
  summary: "RESTHeart supports MongoDB schema validation to enforce a format to documents: rules-based validation from MongoDB 3.2 and Json Schema validation from MongoDB 3.6"
- title: MuleSoft
  url: https://docs.mulesoft.com/json-module/2.1/json-schema-validation
  type: adoption
  summary: The MuleSoft integration framework supports validating a JSON document against a JSON Schema
- title: Apiary
  url: https://help.apiary.io/api_101/json-schema/
  type: adoption
  summary: Apiary's interactive documentation is able to render JSON Schema documents associated with payloads
- title: Axway API Gateway
  url: https://docs.axway.com/bundle/APIGateway_762_PolicyDevFilterReference_allOS_en_HTML5/page/Content/PolicyDevTopics/content_schema_json.htm
  type: adoption
  summary: The API Gateway can check that JavaScript Object Notation (JSON) messages conform to the format expected by a web service by validating requests against a specified JSON schema
- title: Ory Kratos
  url: https://www.ory.sh/kratos/docs/reference/json-schema-json-paths/
  type: adoption
  summary: The Ory Kratos identity & user management product relies on JSON Schema from configuration validation, documentation generation for defining identity schemas
- title: Hackolade
  url: https://hackolade.com/help/JSONSchema.html
  type: adoption
  summary: The Hackolade data modelling service supports defining entities using JSON Schema
- title: JamF
  url: https://docs.jamf.com/technical-papers/jamf-pro/json-schema/10.26.0/Understanding_the_Structure_of_a_JSON_Schema_Manifest.html
  type: adoption
  summary: The JamF Apple enterprise management service supports creating app manifests using JSON Schema
- title: SpreadJS
  url: https://www.grapecity.com/spreadjs/docs/v13/online/jsonschema.html
  type: adoption
  summary: The SpreadJS JavaScript spreadsheet library uses JSON Schema to describe the SpreadJS JSON data format
- title: Contentstack
  url: https://www.contentstack.com/docs/developers/create-content-types/json-schema-for-creating-a-content-type/
  type: adoption
  summary: The Contentstack CMS platform supports creating content types using JSON Schema
- title: Decisions
  url: https://documentation.decisions.com/docs/create-types-json-schema
  type: adoption
  summary: The Decisions rules-driven business process automation platform support using JSON Schema to generate JSON deserializers
- title: Informatica
  url: https://docs.informatica.com/data-integration/b2b-data-transformation/10-2-2/user-guide/wizard-input-and-output-formats/json/sample-json-schema.html
  type: adoption
  summary: The Informatica data management platform supports creating auto-generated data processor transformations using JSON Schema
- title: JetBrains
  url: https://www.jetbrains.com/help/objc/json.html
  type: adoption
  summary: The suite of JetBrains programming editors supports JSON code-completion based on JSON Schema
- title: Postman
  url: https://learning.postman.com/docs/writing-scripts/script-references/test-examples/
  type: adoption
  summary: The Postman API platform supports running JSON Schema validation in API tests
- title: Human Cell Atlas
  url: https://data.humancellatlas.org/metadata/structure
  type: adoption
  summary: The open data generated by the Human Cell Atlas describes metadata structure using JSON Schema
- title: Genomic Data Commons
  url: https://gdc.cancer.gov/developers/gdc-data-model
  type: adoption
  summary: The Genomic Data Commons data model is defined using JSON Schema
- title: Drupal Patternkit
  url: https://www.drupal.org/project/patternkit
  type: adoption
  summary: The Drupal Patternkit module uses JSON Schema to define pattern templates
- title: Smart Data Models
  url: https://github.com/smart-data-models
  type: adoption
  summary: The Smart Data Models GitHub organization makes use of JSON Schema to describe harmonized Data Models for different Smart Domains
- title: Walmart eCommerce
  url: https://developer.walmart.com/documentation/item-object-v4-0/
  type: adoption
  summary: Walmart publishes JSON Schema documents for certain resources that developers can make use of when integratting with the Walmart eCommerce platform
- title: Retool
  url: https://docs.retool.com/docs/working-with-json-schema-form
  type: adoption
  summary: The Retool no-code platform supports generating web forms using JSON Schema
- title: Adobe Experience Manager
  url: https://experienceleague.adobe.com/docs/experience-manager-65/forms/adaptive-forms-advanced-authoring/adaptive-form-json-schema-form-model.html?lang=en
  type: adoption
  summary: The Adobe Experience Manager content management solution for building websites, mobile apps and forms supports creating adaptative forms using JSON Schema
- title: Form.io
  url: https://www.form.io/article/angular-json-schema-form-builder
  type: adoption
  summary: The Form.io online web form generator supports generating Angular.js forms using JSON Schema
- title: Cloudflare
  url: https://blog.cloudflare.com/cloudflares-json-powered-documentation-generator/
  type: adoption
  summary: The Cloudflare makes use of JSON Schema and Hyper Schema to keep track of their API endpoints
- title: Lightblue.io
  url: https://docs.lightblue.io/standards/json_schema.html
  type: adoption
  summary: The Lightblue document based data access layer framework uses JSON Schema to define certain file resources in the project
- title: Open Policy Agent (OPA)
  url: https://blog.openpolicyagent.org/enhanced-type-checking-for-opa-with-json-schema-annotations-826acb0f575
  type: adoption
  summary: The OPA policy-based control platform 0.27.0 and newer support statically type-checking Rego policy code using JSON Schema
- title: Serverless
  url: https://www.serverless.com/framework/docs/configuration-validation/
  type: adoption
  summary: The Serverless framework validates service configuration files using JSON Schema
- title: Snowplow
  url: https://docs.snowplowanalytics.com/docs/understanding-tracking-design/understanding-schemas-and-validation/
  type: adoption
  summary: The Snowplow analytics platform support using JSON Schema to define the structure of the data to collect
- title: Heroku
  url: https://blog.heroku.com/json_schema_for_heroku_platform_api
  type: adoption
  summary: Heroku makes use of JSON Schema to publish machine-readable schema definitions for their public APIs
- title: DocSpring
  url: https://docspring.com/docs/api/get_template_schema.html
  type: adoption
  summary: The DocSpring service to automatically fill out PDF forms supports generating JSON Schema definitions for user-created templates
- title: Nakadi
  url: https://nakadi.io
  type: adoption
  summary: The Nakadi open-source distributed event bus supports defining event types with JSON Schema
- title: Mozilla Data Pipeline
  url: https://docs.telemetry.mozilla.org/concepts/pipeline/schemas.html
  type: adoption
  summary: Mozilla Data Pipeline uses JSON Schema to define telemetry data ingested from Mozilla products and logs from various services
- title: nf-core
  url: https://nf-co.re/tools/#pipeline-schema
  type: adoption
  summary: The nf-core Nextflow analysis pipelines collection uses JSON Schema to define the parameters used by Nextflow workflows
- title: Linux
  url: https://www.kernel.org/doc/html/latest/devicetree/bindings/writing-schema.html
  type: adoption
  summary: The Linux kernel uses JSON Schema to define Devicetree bindings
- title: Cloudflare Terraform
  url: https://www.infoq.com/news/2021/04/cloudflare-terraform/
  type: adoption
  summary: The Cloudflare Terraform provider comes with a tool to generate Terraform configuration from existing Cloudflare resources that uses JSON Schema to map data between both technologies

- title: RDA DMP Common Standard for machine-actionable Data Management Plans
  url: https://github.com/RDA-DMP-Common/RDA-DMP-Common-Standard
  type: adoption
  summary: The RDA DMP Common Standards Working Group maintains JSON Schemas to validate maDMP JSON documents
- title: NinJS
  url: https://www.iptc.org/std/ninjs/userguide/
  type: adoption
  summary: NinJS standardises the representation of news content in JSON and maintains a JSON Schema document to help validate NinJS implementations

- title: Website
  url: https://json-schema.org
  type: official
  summary: The official website of the JSON Schema project
- title: GitHub Discussions
  url: https://github.com/json-schema-org/community/discussions
  type: official
  summary: The discussions page of JSON Schema
- title: Twitter
  url: https://twitter.com/jsonschema
  type: official
  summary: The Twitter account of the JSON Schema project
- title: GitHub
  url: https://github.com/json-schema-org
  type: official
  summary: The official GitHub organization of the JSON Schema project
- title: Test Suite
  url: https://github.com/json-schema-org/JSON-Schema-Test-Suite
  type: official
  summary: The official test suite for JSON Schema implementations
- title: Slack
  url: https://json-schema.org/slack
  type: official
  summary: The official Slack workspace of JSON Schema
- title: OpenCollective
  url: https://opencollective.com/json-schema
  type: official
  summary: The official OpenCollective account of JSON Schema
- title: StackOverflow
  url: https://stackoverflow.com/questions/tagged/jsonschema
  type: official
  summary: The JSON Schema tag in StackOverflow

- title: JSON Schema 2020-12 Core
  url: https://json-schema.org/draft/2020-12/vocab/core
  type: vocabulary
  summary: Keywords that are either required in order to process any schema or meta-schema, including those split across multiple documents, or exist to reserve keywords for purposes that require guaranteed interoperability
- title: JSON Schema 2020-12 Applicator
  url: https://json-schema.org/draft/2020-12/vocab/applicator
  type: vocabulary
  summary: Applicator keywords that are recommended for use as the basis of other vocabularies
- title: JSON Schema 2020-12 Unevaluated
  url: https://json-schema.org/draft/2020-12/vocab/unevaluated
  type: vocabulary
  summary: Keywords that enable schema authors to apply subschemas to array items or object properties that have not been successfully evaluated against any dynamic-scope subschema of any adjacent keywords
- title: JSON Schema 2020-12 Validation
  url: https://json-schema.org/draft/2020-12/vocab/validation
  type: vocabulary
  summary: Validation keywords in a schema impose requirements for successful validation of an instance. These keywords are all assertions without any annotation behavior
- title: JSON Schema 2020-12 Format Annotation
  url: https://json-schema.org/draft/2020-12/vocab/format-annotation
  type: vocabulary
  summary: An annotation keyword defined to allow schema authors to convey semantic information for a fixed subset of values which are accurately described by authoritative resources
- title: JSON Schema 2020-12 Format Assertion
  url: https://json-schema.org/draft/2020-12/vocab/format-assertion
  type: vocabulary
  summary: An assertion keyword defined to allow schema authors to convey semantic information for a fixed subset of values which are accurately described by authoritative resources
- title: JSON Schema 2020-12 Content
  url: https://json-schema.org/draft/2020-12/vocab/content
  type: vocabulary
  summary: Annotations keywords that indicate that an instance contains non-JSON data encoded in a JSON string
- title: JSON Schema 2020-12 Meta-Data
  url: https://json-schema.org/draft/2020-12/vocab/meta-data
  type: vocabulary
  summary: These general-purpose annotation keywords provide commonly used information for documentation and user interface display purposes
- title: Hyper-Schema 2019-09
  url: https://json-schema.org/draft/2019-09/vocab/hyper-schema
  type: vocabulary
  summary: Keywords to annotate JSON documents with hyperlinks. These hyperlinks include attributes describing how to manipulate and interact with remote resources through hypermedia environments such as HTTP, as well as determining whether the link is usable based on the instance value

- title: Type Safety with JSON Subschema
  url: https://arxiv.org/abs/1911.12651
  year: 2020
  type: paper
  summary: Deciding whether one schema is a subschema of another is non-trivial because of the richness of the JSON Schema specification language. Given a pair of schemas, our approach first canonicalizes and simplifies both schemas, then decides the subschema question on the canonical forms, dispatching simpler subschema queries to type-specific checkers

- title: What Are Real JSON Schemas Like?
  url: https://link.springer.com/chapter/10.1007/978-3-030-34146-6_9
  year: 2019
  type: paper
  summary: A first empirical analysis of a curated collection of real-world JSON Schemas. Knowing what real JSON Schemas are like (to borrow from a title of a related study on DTDs) helps practitioners and researchers in making realistic assumptions when building tools for JSON Schema processing

- title: Challenges in Checking JSON Schema Containment over Evolving Real-World Schemas
  url: https://link.springer.com/chapter/10.1007/978-3-030-65847-2_20
  year: 2020
  type: paper
  summary: This paper presents the results of an empirical study of the first generation of tools for checking JSON Schema containment which is applied to a diverse collection of over 230 real-world schemas and their altogether 1k historic versions

- title: JSON Schema Inference Approaches
  url: https://link.springer.com/chapter/10.1007/978-3-030-65847-2_16
  year: 2020
  type: paper
  summary: In the context of document NoSQL databases, namely those assuming the JSON data format, this paper focuses on several representatives of the existing inference approaches and provide their thorough comparison

- title: JSONSchema.dev
  url: https://jsonschema.dev
  type: tool
  summary: An online JSON Schema validator created by the JSON Schema specification lead
- title: Hyperjump JSON Schema Validator
  url: https://json-schema.hyperjump.io
  type: tool
  summary: An online JSON Schema validator that supports Draft 04, 06, 07, 2019-09, and 2020-12
- title: JSONschema.Net
  url: https://www.jsonschema.net
  type: tool
  summary: An online tool that generates JSON schema from JSON documents
- title: JSON Schema Validator
  url: https://www.jsonschemavalidator.net
  type: tool
  summary: An online JSON Schema validator with support for JSON Schema Draft 3, Draft 4, Draft 6, Draft 7 and Draft 2019-09
- title: JSON Schema Validator and Generator
  url: https://extendsclass.com/json-schema-validator.html
  type: tool
  summary: An online JSON Schema validator that can generate JSON Schema from JSON documents and generate random JSON documents from JSON Schema

- title: Top-Down Model-Driven Engineering of Web Services from Extended OpenAPI Models
  url: https://ieeexplore.ieee.org/abstract/document/9000020
  year: 2018
  type: paper
  summary: Shows how OpenAPI can be extended to add implementation details inside models. These extensions link services to assemblies of components that describe computations. Hence a top-down development process that keeps model and implementation aligned

- title: Foundations of JSON Schema
  url: https://dl.acm.org/doi/abs/10.1145/2872427.2883029
  year: 2016
  type: paper
  summary: In this paper we provide the first formal definition of syntax and semantics for JSON Schema and use it to show that implementing this layer on top of JSON is feasible in practice

- title: "User profile integration made easy: model-driven extraction and transformation of social network schemas"
  url: https://dl.acm.org/doi/abs/10.1145/2187980.2188227
  year: 2012
  type: paper
  summary: This paper presents, firstly, a semi-automatic approach to extract schema information from instance data. Secondly, transformations of the derived schemas to different technical spaces are utilized, thereby allowing, amongst other benefits, the application of established integration tools and methods. Finally, as a case study, schemas are derived for Facebook, Google+, and LinkedIn

- title: Example-Driven Web API Specification Discovery
  url: https://link.springer.com/chapter/10.1007/978-3-319-61482-3_16
  year: 2017
  type: paper
  summary: In this paper we present an example-driven discovery process that generates model-based OpenAPI specifications for REST Web APIs by using API call examples. A tool implementing our approach and a community-driven repository for the discovered APIs are also presented

- title: "Jsongen: a quickcheck based library for testing JSON web services"
  url: https://dl.acm.org/doi/abs/10.1145/2633448.2633454
  year: 2014
  type: paper
  summary: This article describes a systematic approach to testing behavioural aspects of Web Services that communicate using the JSON data format. To generate random JSON data for populating tests we have developed a new library, jsongen, which given a characterisation of the JSON data as a JSON schema, (i) automatically derives a QuickCheck generator which can generate an infinite number of JSON values that validate against the schema, and (ii) provides a generic QuickCheck state machine which is capable of following the (hyper)links documented in the JSON schema, to automatically explore the web service

- title: An Approach for Schema Extraction of JSON and Extended JSON Document Collections
  url: https://ieeexplore.ieee.org/abstract/document/8424731
  year: 2018
  type: paper
  summary: This paper presents an approach that extracts a schema from a JSON or Extended JSON document collection stored in a NoSQL document-oriented database or other document repository. Aggregation operations are considered in order to obtain a schema for each distinct structure in the collection, and a hierarchical data structure is proposed to group these schemas in order to generate a global schema in JSON Schema format

- title: Schema extraction and structural outlier detection for JSON-based nosql data stores
  url: https://dl.gi.de/handle/20.500.12116/2420
  year: 2015
  type: paper
  summary: Rather than designing the schema up front, extracting a schema in hindsight can be seen as a reverse-engineering step. Based on the extracted schema information, we propose set of similarity measures that capture the degree of heterogeneity of JSON data and which reveal structural outliers in the data

- title: Definition of REST web services with JSON schema
  url: https://dl.acm.org/doi/abs/10.1002/spe.2466
  year: 2017
  type: paper
  summary: The aim of this article is to demonstrate how JSON Schema, and particularly the JSON Hyper Schema extension, is suitable to describe JSON-based web services that follow the REST architectural pattern

- title: Understanding API Complexity Through Schema Entropy
  url: https://smizell.com/posts/2021/05/understanding-api-complexity-through-schema-entropy/
  year: 2021
  type: article
  summary: A look at API complexity by analyzing entropy of JSON Schema documents

- title: Robustness, Tolerance, and JSON Schema
  url: https://smizell.com/posts/2021/07/robustness-tolerance-and-json-schema/
  year: 2021
  type: article
  summary: Applying the Robustness Principle and increasing schema entropy when making changes to an API

- title: SchemaStore
  url: https://www.schemastore.org
  type: registry
  summary: The largest collection of independent JSON schemas in the world meant as a universal JSON schema store, where schemas for popular JSON documents can be found
